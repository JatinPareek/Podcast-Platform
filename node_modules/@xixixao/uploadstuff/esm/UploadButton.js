import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useRef, useState } from "react";
import { twMerge } from "tailwind-merge";
import { UploadSpinner } from "./UploadSpinner";
import { useUploadFiles } from "./useUploadFiles";
export function UploadButton(props) {
    const fileInputRef = useRef(null);
    const [uploadProgress, setUploadProgress] = useState(0);
    const { startUpload, isUploading } = useUploadFiles(props.uploadUrl, {
        onUploadComplete: async (res) => {
            if (fileInputRef.current) {
                fileInputRef.current.value = "";
            }
            await props.onUploadComplete?.(res);
            setUploadProgress(0);
        },
        onUploadProgress: (p) => {
            setUploadProgress(p);
            props.onUploadProgress?.(p);
        },
        onUploadError: props.onUploadError,
        onUploadBegin: props.onUploadBegin,
    });
    const combinedState = isUploading ? uploadProgress : null;
    return (_jsxs("label", { className: props.className?.(combinedState) ??
            twMerge("relative flex h-10 w-36 cursor-pointer items-center justify-center " +
                "overflow-hidden rounded-md text-white after:transition-[width] after:duration-500 " +
                "hover:bg-blue-600/90", isUploading &&
                `before:absolute before:-z-20 before:w-full before:h-full before:bg-blue-400 ` +
                    ` after:absolute after:-z-10 after:left-0 after:h-full after:bg-blue-600 ${progressWidths[uploadProgress]}`, !isUploading && "bg-blue-600"), children: [_jsx("input", { className: "hidden", type: "file", ref: fileInputRef, multiple: props.multiple, accept: (props.fileTypes ?? [])?.join(", "), onChange: (event) => {
                    if (!event.target.files) {
                        return;
                    }
                    const files = Array.from(event.target.files);
                    void startUpload(files);
                }, disabled: isUploading }), props.content?.(combinedState) ??
                (isUploading ? (_jsx(UploadSpinner, {})) : (`Choose File${props.multiple ? `(s)` : ``}`))] }));
}
const progressWidths = {
    0: "after:w-0",
    10: "after:w-[10%]",
    20: "after:w-[20%]",
    30: "after:w-[30%]",
    40: "after:w-[40%]",
    50: "after:w-[50%]",
    60: "after:w-[60%]",
    70: "after:w-[70%]",
    80: "after:w-[80%]",
    90: "after:w-[90%]",
    100: "after:w-[100%]",
};
